"""insert countries

Revision ID: 3465622b0488
Revises: 
Create Date: 2024-02-27 22:45:29.353042

"""
from typing import Sequence, Union
from pathlib import Path

from alembic import op
import sqlalchemy as sa

from app.database import Base


# revision identifiers, used by Alembic.
revision: str = '3465622b0488'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = sa.engine.reflection.Inspector.from_engine(conn)
    
    if "countries" not in inspector.get_table_names():
        countries = op.create_table(
            "countries",
            
            sa.Column("id", sa.Integer(), primary_key=True),
            sa.PrimaryKeyConstraint("id", name=op.f("pk_countries")),
            
            sa.Column("name", sa.String(100), nullable=False),
            sa.Column("alpha2", sa.String(2), nullable=False),
            sa.Column("alpha3", sa.String(3), nullable=False),
            sa.Column("region", sa.String(16), nullable=False),
        )
        
        op.bulk_insert(countries, [{
            "name": "Algeria",
            "alpha2": "DZ",
            "alpha3": "DZA",
            "region": "Africa"
        }, {
            "name": "Russian Federation",
            "alpha2": "RU",
            "alpha3": "RUS",
            "region": "Europe"
        }])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
